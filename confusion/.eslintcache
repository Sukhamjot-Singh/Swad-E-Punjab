[{"/home/sukhamjot/Desktop/Reactapp/confusion/src/index.js":"1","/home/sukhamjot/Desktop/Reactapp/confusion/src/App.js":"2","/home/sukhamjot/Desktop/Reactapp/confusion/src/reportWebVitals.js":"3","/home/sukhamjot/Desktop/Reactapp/confusion/src/components/MenuComponent.js":"4","/home/sukhamjot/Desktop/Reactapp/confusion/src/shared/dishes.js":"5","/home/sukhamjot/Desktop/Reactapp/confusion/src/components/DishdetailComponent.js":"6","/home/sukhamjot/Desktop/Reactapp/confusion/src/components/MainComponent.js":"7","/home/sukhamjot/Desktop/Reactapp/confusion/src/components/HeaderComponent.js":"8","/home/sukhamjot/Desktop/Reactapp/confusion/src/components/FooterComponent.js":"9","/home/sukhamjot/Desktop/Reactapp/confusion/src/components/HomeComponent.js":"10","/home/sukhamjot/Desktop/Reactapp/confusion/src/components/ContactComponent.js":"11","/home/sukhamjot/Desktop/Reactapp/confusion/src/shared/promotions.js":"12","/home/sukhamjot/Desktop/Reactapp/confusion/src/shared/comments.js":"13","/home/sukhamjot/Desktop/Reactapp/confusion/src/shared/leaders.js":"14","/home/sukhamjot/Desktop/Reactapp/confusion/src/components/AboutComponent.js":"15","/home/sukhamjot/Desktop/Reactapp/confusion/src/redux/configureStore.js":"16","/home/sukhamjot/Desktop/Reactapp/confusion/src/components/CommentForm.js":"17","/home/sukhamjot/Desktop/Reactapp/confusion/src/redux/dishes.js":"18","/home/sukhamjot/Desktop/Reactapp/confusion/src/redux/leaders.js":"19","/home/sukhamjot/Desktop/Reactapp/confusion/src/redux/comments.js":"20","/home/sukhamjot/Desktop/Reactapp/confusion/src/redux/promotions.js":"21","/home/sukhamjot/Desktop/Reactapp/confusion/src/redux/ActionTypes.js":"22","/home/sukhamjot/Desktop/Reactapp/confusion/src/redux/ActionCreators.js":"23"},{"size":639,"mtime":1608130459214,"results":"24","hashOfConfig":"25"},{"size":580,"mtime":1608639888575,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1607409115404,"results":"27","hashOfConfig":"25"},{"size":1445,"mtime":1608219114003,"results":"28","hashOfConfig":"25"},{"size":1429,"mtime":1608218221843,"results":"29","hashOfConfig":"25"},{"size":6125,"mtime":1609682523307,"results":"30","hashOfConfig":"25"},{"size":2277,"mtime":1609331337517,"results":"31","hashOfConfig":"25"},{"size":2298,"mtime":1608132386165,"results":"32","hashOfConfig":"25"},{"size":2564,"mtime":1608304296275,"results":"33","hashOfConfig":"25"},{"size":1044,"mtime":1608218733608,"results":"34","hashOfConfig":"25"},{"size":9748,"mtime":1608732658266,"results":"35","hashOfConfig":"25"},{"size":436,"mtime":1608218314439,"results":"36","hashOfConfig":"25"},{"size":4117,"mtime":1608218304651,"results":"37","hashOfConfig":"25"},{"size":2338,"mtime":1617802433778,"results":"38","hashOfConfig":"25"},{"size":4248,"mtime":1608306511136,"results":"39","hashOfConfig":"25"},{"size":466,"mtime":1609330895586,"results":"40","hashOfConfig":"25"},{"size":3165,"mtime":1609149043984,"results":"41","hashOfConfig":"25"},{"size":175,"mtime":1609330681271,"results":"42","hashOfConfig":"25"},{"size":179,"mtime":1609330727888,"results":"43","hashOfConfig":"25"},{"size":428,"mtime":1609331109057,"results":"44","hashOfConfig":"25"},{"size":191,"mtime":1609330715756,"results":"45","hashOfConfig":"25"},{"size":42,"mtime":1609330946788,"results":"46","hashOfConfig":"25"},{"size":270,"mtime":1609330965923,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1p555i6",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/home/sukhamjot/Desktop/Reactapp/confusion/src/index.js",[],["100","101"],"/home/sukhamjot/Desktop/Reactapp/confusion/src/App.js",["102"],"import './App.css';\n\nimport Main from './components/MainComponent';\nimport {Component} from 'react';\nimport {DISHES} from './shared/dishes';\n\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component{\n\n\n  render()\n  {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n\n    );\n  };\n}\n\nexport default App;\n","/home/sukhamjot/Desktop/Reactapp/confusion/src/reportWebVitals.js",[],"/home/sukhamjot/Desktop/Reactapp/confusion/src/components/MenuComponent.js",["103","104"],"import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody,\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\n  import {Link} from 'react-router-dom';\n\n    function RenderMenuItem({dish,onClick})\n    {\n      return(\n        <Card key={dish.id}>\n          <Link to = {`/menu/${dish.id}`}>\n          <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\n          <CardImgOverlay>\n              <CardTitle><strong>{dish.name}</strong></CardTitle>\n          </CardImgOverlay>\n          </Link>\n        </Card>\n      );\n    }\n\n    const Menu = (props) => {\n        const menu = props.dishes.map((dish) => {\n            return (\n              <div  className=\"col-12 col-md-5 m-1\">\n                <RenderMenuItem dish = {dish} />\n              </div>\n            );\n        });\n\n        return (\n          <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        );\n    }\n\nexport default Menu;\n","/home/sukhamjot/Desktop/Reactapp/confusion/src/shared/dishes.js",[],"/home/sukhamjot/Desktop/Reactapp/confusion/src/components/DishdetailComponent.js",["105","106","107","108","109"],"import React,{Component} from 'react';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody,\n    CardTitle, Breadcrumb, BreadcrumbItem  } from 'reactstrap';\n    import { Link } from 'react-router-dom';\n\n    // import CommentForm from './CommentForm';\n\n\n    import {Button, Modal, ModalHeader , ModalBody,Label,Row,Col,Input} from 'reactstrap';\n    import { Control, LocalForm, Errors } from 'react-redux-form';\n\n    const required = (val) => val && val.length;\n\n    const maxLength = (len) => (val) => !(val) || (val.length <= len);\n    const minLength = (len) => (val) => val && (val.length >= len);\n\n    class CommentForm extends Component\n    {\n      constructor(props)\n      {\n        super(props);\n\n        this.state = {\n          ModalState : false\n        };\n        this.toggleModal = this.toggleModal.bind(this)\n      }\n\n      toggleModal()\n      {\n        this.setState(\n          {\n            ModalState : !this.state.ModalState\n          }\n        );\n        console.log(this.state.ModalState)\n      }\n      render()\n      {\n          return(\n          <div className = \"container\">\n            <Button onClick = {this.toggleModal} outline color=\"secondary\"><i className = \"fa fa-pencil\"></i> Sumbit Comment</Button>\n            <Modal isOpen = {this.state.ModalState} toggle = {this.toggleModal} className = \"modal-dialog\">\n              <ModalHeader>Sumbit Comment</ModalHeader>\n              <ModalBody>\n                <LocalForm>\n                  <Row className = \"form-group\">\n                    <Col md = {10}>\n                      <Label htmlFor=\"rating\">Rating</Label>\n                          <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\">\n                            <option>Rating</option>\n                            <option>5</option>\n                            <option>4</option>\n                            <option>3</option>\n                            <option>2</option>\n                            <option>1</option>\n                          </Control.select>\n                       </Col>\n                  </Row>\n                  <Row className = \"form-group\">\n                    <Label for=\"firstname\" md={2}>Your Name</Label>\n                    <Col md = {10}>\n                      <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                          placeholder=\"First Name\"\n                          className=\"form-control\"\n                          validators={{\n                              required, minLength: minLength(3), maxLength: maxLength(15)\n                          }}\n                           />\n                           <Errors\n                               className=\"text-danger\"\n                               model=\".firstname\"\n                               show=\"touched\"\n                               messages={{\n                                   required: 'Required',\n                                   minLength: 'Must be greater than 2 characters',\n                                   maxLength: 'Must be 15 characters or less'\n                               }}\n                            />\n                       </Col>\n                  </Row>\n                  <Row className=\"form-group\">\n                      <Label htmlFor=\"message\" md={2}>Comment</Label>\n                      <Col md={10}>\n                          <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                              rows=\"6\"\n                              className=\"form-control\" />\n                      </Col>\n                  </Row>\n                  <Row className=\"form-group\">\n                      <Col md={10}>\n                          <Button color = \"primary\">Sumbit</Button>\n                      </Col>\n                  </Row>\n\n                </LocalForm>\n              </ModalBody>\n            </Modal>\n          </div>\n\n        );\n      }\n    }\n\n\n  function RenderDish({dish})\n  {\n    return(\n        <Card>\n            <CardImg top src={dish.image} alt={dish.name} />\n            <CardBody>\n              <CardTitle>{dish.name}</CardTitle>\n              <CardText>{dish.description}</CardText>\n            </CardBody>\n        </Card>\n\n\n    );\n  }\n\n  function RenderComments({commentsArr, addComment, dishId}) {\n\n    if(commentsArr != null)\n    {\n        return(commentsArr.map( (usercomment) =>\n        {\n              return(<div>\n                <li className = \"list-unstyled\">{usercomment.comment}</li>\n              <br></br>\n              <li className = \"list-unstyled\"> -- {usercomment.author},{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(usercomment.date)))}</li>\n              <br></br>\n              </div>\n            );\n        }));\n    }\n    else{\n      return(<div></div>);\n    }\n\n\n  }\n\n  const Dishdetail = (props) =>\n  {\n    if (props.dish != null){\n      return (\n                <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <RenderDish dish={props.dish} />\n                    </div>\n                    <div className=\"col-12 col-md-5 m-1\">\n                      <RenderComments commentsArr={props.comments}\n                        addComment={props.addComment}\n                        dishId={props.dish.id}\n                      />\n                    </div>\n                  <CommentForm dishId={props.dishId} addComment={props.addComment} />\n                </div>\n                </div>\n            );\n      }\n\n\n    else\n        return(\n            <div></div>\n        );\n    }\n\n\nexport default Dishdetail;\n","/home/sukhamjot/Desktop/Reactapp/confusion/src/components/MainComponent.js",["110"],"\nimport Menu from './MenuComponent';\nimport Dishdetail from './DishdetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Contact from './ContactComponent';\nimport Home from './HomeComponent';\nimport About from './AboutComponent';\n\n\n\nimport { Switch, Route, Redirect,withRouter } from 'react-router-dom';\nimport {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {addComment} from '../redux/ActionCreators';\n\n\nconst mapDispatchToProps = dispatch =>\n(\n  {\n    addComment : (dishId , rating, author,comment) => dispatch(addComment(dishId , rating, author,comment))\n  }\n);\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\n\nclass Main extends Component{\n  constructor(props)\n  {\n    super(props);\n  }\n\n\n  render()\n  {\n\n    const HomePage = () => {\n      return(\n          <Home\n              dish={this.props.dishes.filter((dish) => dish.featured)[0]}\n              promotion={this.props.promotions.filter((promo) => promo.featured)[0]}\n              leader={this.props.leaders.filter((leader) => leader.featured)[0]}\n          />\n      );\n    }\n\n    const DishWithId = ({match}) => {\n      return(\n        <Dishdetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\n                comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\n                addComment={this.props.addComment}\n              />\n      );\n    };\n\n    return (\n      <div>\n        <Header />\n        <div>\n          <Switch>\n              <Route path='/home' component={HomePage} />\n              <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />} />\n              <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n              <Route path='/menu/:dishId' component={DishWithId} />\n              <Route exact path='/contactus' component={Contact} />} />\n              <Redirect to=\"/home\" />\n          </Switch>\n        </div>\n        <Footer />\n      </div>\n    );\n  };\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\n","/home/sukhamjot/Desktop/Reactapp/confusion/src/components/HeaderComponent.js",[],"/home/sukhamjot/Desktop/Reactapp/confusion/src/components/FooterComponent.js",[],"/home/sukhamjot/Desktop/Reactapp/confusion/src/components/HomeComponent.js",[],"/home/sukhamjot/Desktop/Reactapp/confusion/src/components/ContactComponent.js",["111","112","113","114","115","116","117","118","119"],"import React,{Component} from 'react';\nimport {Breadcrumb , BreadcrumbItem,Button, Label, Input, Col, Row} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\nclass Contact extends Component\n{\n  constructor(props)\n  {\n      super(props);\n\n      this.handleSubmit = this.handleSubmit.bind(this);\n\n\n  }\n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n\n    }\n\n\n  render()\n  {\n      return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>Contact Us</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                <h3>Location Information</h3>\n                </div>\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n              </div>\n              <div className=\"col-12 col-sm-6 offset-sm-1\">\n                    <h5>Map of our Location</h5>\n              </div>\n              <div className=\"col-12 col-sm-11 offset-sm-1\">\n                    <div className=\"btn-group\" role=\"group\">\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                    </div>\n              </div>\n            </div>\n            <div className = \"row row-content\">\n              <div className = \"col-12\">\n                Send Us Your Feedback\n              </div>\n              <div className = \"col-12 col-md-9\">\n                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                  <Row className=\"form-group\">\n                        <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                        <Col md={10}>\n                            <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                placeholder=\"First Name\"\n                                className=\"form-control\"\n                                validators={{\n                                    required, minLength: minLength(3), maxLength: maxLength(15)\n                                }}\n                                 />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".firstname\"\n                                show=\"touched\"\n                                messages={{\n                                    required: 'Required',\n                                    minLength: 'Must be greater than 2 characters',\n                                    maxLength: 'Must be 15 characters or less'\n                                }}\n                             />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                        <Col md={10}>\n                            <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                placeholder=\"Last Name\"\n                                className=\"form-control\"\n                                validators={{\n                                    required, minLength: minLength(3), maxLength: maxLength(15)\n                                }}\n                                 />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".lastname\"\n                                show=\"touched\"\n                                messages={{\n                                    required: 'Required',\n                                    minLength: 'Must be greater than 2 characters',\n                                    maxLength: 'Must be 15 characters or less'\n                                }}\n                             />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                        <Col md={10}>\n                            <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                placeholder=\"Tel. Number\"\n                                className=\"form-control\"\n                                validators={{\n                                    required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                }}\n                                 />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".telnum\"\n                                show=\"touched\"\n                                messages={{\n                                    required: 'Required',\n                                    minLength: 'Must be greater than 2 numbers',\n                                    maxLength: 'Must be 15 numbers or less',\n                                    isNumber: 'Must be a number'\n                                }}\n                             />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"email\" md={2}>Email</Label>\n                        <Col md={10}>\n                            <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                placeholder=\"Email\"\n                                className=\"form-control\"\n                                validators={{\n                                    required, validEmail\n                                }}\n                                 />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".email\"\n                                show=\"touched\"\n                                messages={{\n                                    required: 'Required',\n                                    validEmail: 'Invalid Email Address'\n                                }}\n                             />\n                        </Col>\n                    </Row>\n\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\"\n                                                 /> {' '}\n                                                <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                    Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n              </div>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default Contact;\n","/home/sukhamjot/Desktop/Reactapp/confusion/src/shared/promotions.js",[],"/home/sukhamjot/Desktop/Reactapp/confusion/src/shared/comments.js",[],"/home/sukhamjot/Desktop/Reactapp/confusion/src/shared/leaders.js",[],"/home/sukhamjot/Desktop/Reactapp/confusion/src/components/AboutComponent.js",[],"/home/sukhamjot/Desktop/Reactapp/confusion/src/redux/configureStore.js",[],"/home/sukhamjot/Desktop/Reactapp/confusion/src/components/CommentForm.js",["120","121"],"/home/sukhamjot/Desktop/Reactapp/confusion/src/redux/dishes.js",[],"/home/sukhamjot/Desktop/Reactapp/confusion/src/redux/leaders.js",[],"/home/sukhamjot/Desktop/Reactapp/confusion/src/redux/comments.js",[],"/home/sukhamjot/Desktop/Reactapp/confusion/src/redux/promotions.js",[],"/home/sukhamjot/Desktop/Reactapp/confusion/src/redux/ActionTypes.js",[],"/home/sukhamjot/Desktop/Reactapp/confusion/src/redux/ActionCreators.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":5,"column":9,"nodeType":"128","messageId":"129","endLine":5,"endColumn":15},{"ruleId":"126","severity":1,"message":"130","line":2,"column":41,"nodeType":"128","messageId":"129","endLine":2,"endColumn":49},{"ruleId":"126","severity":1,"message":"131","line":2,"column":51,"nodeType":"128","messageId":"129","endLine":2,"endColumn":59},{"ruleId":"126","severity":1,"message":"132","line":2,"column":25,"nodeType":"128","messageId":"129","endLine":2,"endColumn":39},{"ruleId":"126","severity":1,"message":"133","line":9,"column":66,"nodeType":"128","messageId":"129","endLine":9,"endColumn":71},{"ruleId":"134","severity":1,"message":"135","line":50,"column":27,"nodeType":"136","endLine":50,"endColumn":110},{"ruleId":"134","severity":1,"message":"137","line":63,"column":23,"nodeType":"136","endLine":69,"endColumn":30},{"ruleId":"134","severity":1,"message":"138","line":85,"column":27,"nodeType":"136","endLine":87,"endColumn":58},{"ruleId":"139","severity":1,"message":"140","line":34,"column":3,"nodeType":"141","messageId":"142","endLine":37,"endColumn":4},{"ruleId":"126","severity":1,"message":"133","line":2,"column":52,"nodeType":"128","messageId":"129","endLine":2,"endColumn":57},{"ruleId":"143","severity":1,"message":"144","line":65,"column":25,"nodeType":"136","endLine":65,"endColumn":67},{"ruleId":"134","severity":1,"message":"137","line":79,"column":29,"nodeType":"136","endLine":85,"endColumn":36},{"ruleId":"134","severity":1,"message":"137","line":101,"column":29,"nodeType":"136","endLine":107,"endColumn":36},{"ruleId":"134","severity":1,"message":"137","line":123,"column":29,"nodeType":"136","endLine":129,"endColumn":36},{"ruleId":"134","severity":1,"message":"137","line":146,"column":29,"nodeType":"136","endLine":152,"endColumn":36},{"ruleId":"134","severity":1,"message":"145","line":169,"column":45,"nodeType":"136","endLine":171,"endColumn":52},{"ruleId":"134","severity":1,"message":"135","line":177,"column":37,"nodeType":"136","endLine":178,"endColumn":66},{"ruleId":"134","severity":1,"message":"138","line":187,"column":37,"nodeType":"136","endLine":189,"endColumn":68},{"ruleId":"134","severity":1,"message":"137","line":54,"column":19,"nodeType":"136","endLine":60,"endColumn":26},{"ruleId":"134","severity":1,"message":"138","line":76,"column":23,"nodeType":"136","endLine":78,"endColumn":54},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'DISHES' is defined but never used.","Identifier","unusedVar","'CardText' is defined but never used.","'CardBody' is defined but never used.","'CardImgOverlay' is defined but never used.","'Input' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]